AWSTemplateFormatVersion: '2010-09-09'
Description: Robonews Subscription Stack

Parameters:
  BucketName:
    Type: String
    Description: Name of the Robonews bucket
  SubscribeLambdaName:
    Type: String
    Description: Name of the subscribe lambda
  UnsubscribeLambdaName:
    Type: String
    Description: Name of the unsubscribe lambda

Resources:
  LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: LambdaSESPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "logs:CreateLogGroup"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                  Resource: "arn:aws:logs:*:*:*"
                - Effect: Allow
                  Action:
                    - "ses:SendEmail"
                    - "ses:SendRawEmail"
                    - "ses:SendTemplatedEmail"
                  Resource: arn:aws:ses:us-east-1:123456789012:identity/kanesweet.com
                - Effect: "Allow"
                  Action:
                  - "dynamodb:PutItem"
                  - "dynamodb:UpdateItem"
                  - "dynamodb:BatchWriteItem"
                  - "dynamodb:DeleteItem"
                  Resource:
                    - !Ref UserEmailsTableArn
  SubscribeLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref SubscribeLambdaName
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.11
      Code:
        S3Bucket: !Ref BucketName
        S3Key: !Sub "subscription/${SubscribeLambdaName}.zip"

  UnsubscribeLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref UnsubscribeLambdaName
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.11
      Code:
        S3Bucket: !Ref BucketName
        S3Key: !Sub "subscription/${UnsubscribeLambdaName}.zip"

  UserEmailsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: UserEmails
      AttributeDefinitions:
        - AttributeName: Email
          AttributeType: S
        - AttributeName: Name
          AttributeType: S
      KeySchema:
        - AttributeName: Email
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

Outputs:
  UserEmailsTableArn:
    Description: "The ARN of the DynamoDB UserEmails table"
    Value: !GetAtt UserEmailsTable.Arn
    Export:
      Name: UserEmailsTableArn
