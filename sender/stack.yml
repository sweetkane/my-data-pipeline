AWSTemplateFormatVersion: "2010-09-09"
Description: Robonews Sender Stack

Parameters:
  LambdaFunctionName:
    Type: String
    Description: Name of the lambda function
  ImageUri:
    Type: String
    Description: Uri of the docker image containing the lambda function.
  EncryptionKeyId:
    Type: String
    Description: Id of the KMS key used to encrypt/decrypt unsubscribe URLs

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaSESPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - "ses:SendEmail"
                  - "ses:SendRawEmail"
                  - "ses:SendTemplatedEmail"
                Resource: "*"
        - PolicyName: LambdaDynamoDBWritePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:BatchGetItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
                Resource: !ImportValue UserEmailsTableArn
        - PolicyName: LambdaKMSPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'kms:Decrypt'
                  - 'kms:Encrypt'
                Resource: '*'

  SenderLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      PackageType: Image
      Timeout: 300
      Code:
        ImageUri: !Ref ImageUri
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          KMS_KEY_ID: !Ref EncryptionKeyId
          UNSUBSCRIBE_LAMBDA_URL: !ImportValue UnsubscribeLambdaUrl

  DailyTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: "cron(0 12 ? * 4 *)" # Daily at 6am CST
      Targets:
        - Arn: !GetAtt SenderLambdaFunction.Arn
          Id: SenderLambdaFunctionTarget
          Input: |
            {
              "datasources": ["nyt"],
              "transform": "news_summarizer",
              "outputs": ["email"]
            }

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt DailyTriggerRule.Arn
